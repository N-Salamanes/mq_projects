Program tree:
-------------

HipsterProgram (
    Vector (
        ConstantDecl (IntType (), IdnDef ("width"), IntExpr (100)),
        ConstantDecl (IntType (), IdnDef ("height"), IntExpr (100)),
        DimDecl (
            Vector (
                CyclicDim (IdnExpr (IdnUse ("width"))),
                BoundedDim (IdnExpr (IdnUse ("height"))))),
        NeighbourhoodDecl (
            Vector (
                NeighbourDecl (
                    IdnDef ("N"),
                    CoordExpr (Vector (IntExpr (0), IntExpr (1)))),
                NeighbourDecl (
                    IdnDef ("S"),
                    CoordExpr (Vector (IntExpr (0), NegExpr (IntExpr (1))))),
                NeighbourDecl (
                    IdnDef ("W"),
                    CoordExpr (Vector (NegExpr (IntExpr (1)), IntExpr (0)))),
                NeighbourDecl (
                    IdnDef ("E"),
                    CoordExpr (Vector (IntExpr (1), IntExpr (0)))),
                NeighbourDecl (
                    IdnDef ("NE"),
                    CoordExpr (Vector (IntExpr (1), IntExpr (1)))),
                NeighbourDecl (
                    IdnDef ("SE"),
                    CoordExpr (Vector (IntExpr (1), NegExpr (IntExpr (1))))),
                NeighbourDecl (
                    IdnDef ("SW"),
                    CoordExpr (
                        Vector (
                            NegExpr (IntExpr (1)),
                            NegExpr (IntExpr (1))))),
                NeighbourDecl (
                    IdnDef ("NW"),
                    CoordExpr (Vector (NegExpr (IntExpr (1)), IntExpr (1)))))),
        StateDecl (
            Vector (
                VarDecl (BoolType (), IdnDef ("alive"), Some (FalseExpr ())))),
        UpdaterDecl (
            Vector (
                VarDecl (IntType (), IdnDef ("count"), Some (IntExpr (0))),
                IterateOverStmt (
                    IdnDef ("current"),
                    Others (),
                    IfStmt (
                        NeighbourExpr (
                            IdnExpr (IdnUse ("current")),
                            IdnUse ("alive")),
                        AssignStmt (
                            IdnExpr (IdnUse ("count")),
                            PlusExpr (
                                IdnExpr (IdnUse ("count")),
                                IntExpr (1))),
                        None)),
                IfStmt (
                    AndExpr (
                        IdnExpr (IdnUse ("alive")),
                        OrExpr (
                            LessExpr (
                                IdnExpr (IdnUse ("count")),
                                IntExpr (2)),
                            GreaterExpr (
                                IdnExpr (IdnUse ("count")),
                                IntExpr (3)))),
                    AssignStmt (IdnExpr (IdnUse ("alive")), FalseExpr ()),
                    None),
                IfStmt (
                    AndExpr (
                        NotExpr (IdnExpr (IdnUse ("alive"))),
                        EqualExpr (IdnExpr (IdnUse ("count")), IntExpr (3))),
                    AssignStmt (IdnExpr (IdnUse ("alive")), TrueExpr ()),
                    None))),
        ConstantDecl (IntType (), IdnDef ("black"), IntExpr (0)),
        ConstantDecl (IntType (), IdnDef ("white"), IntExpr (16777215)),
        ColourMapperDecl (
            Vector (
                IfStmt (
                    IdnExpr (IdnUse ("alive")),
                    ReturnStmt (Some (IdnExpr (IdnUse ("white")))),
                    Some (ReturnStmt (Some (IdnExpr (IdnUse ("black")))))))),
        FunctionDecl (
            IdnDef ("glider"),
            Vector (
                ParamDecl (IntType (), IdnDef ("row")),
                ParamDecl (IntType (), IdnDef ("col"))),
            None,
            Vector (
                CellStmt (
                    CoordExpr (
                        Vector (
                            IdnExpr (IdnUse ("row")),
                            IdnExpr (IdnUse ("col")))),
                    IterateOverStmt (
                        IdnDef ("nbr"),
                        Subset (
                            Vector (
                                IdnExpr (IdnUse ("N")),
                                IdnExpr (IdnUse ("E")),
                                IdnExpr (IdnUse ("SW")),
                                IdnExpr (IdnUse ("S")),
                                IdnExpr (IdnUse ("SE")))),
                        AssignStmt (
                            NeighbourExpr (
                                IdnExpr (IdnUse ("nbr")),
                                IdnUse ("alive")),
                            TrueExpr ()))))),
        InitialiserDecl (
            IdnDef ("singleGlider"),
            Vector (
                FunCallStmt (
                    FunCallExpr (
                        IdnUse ("glider"),
                        Vector (
                            DivExpr (
                                IdnExpr (IdnUse ("height")),
                                IntExpr (2)),
                            DivExpr (
                                IdnExpr (IdnUse ("width")),
                                IntExpr (2))))))),
        InitialiserDecl (
            IdnDef ("fourGliders"),
            Vector (
                FunCallStmt (
                    FunCallExpr (
                        IdnUse ("glider"),
                        Vector (
                            DivExpr (
                                IdnExpr (IdnUse ("height")),
                                IntExpr (4)),
                            DivExpr (
                                IdnExpr (IdnUse ("width")),
                                IntExpr (4))))),
                FunCallStmt (
                    FunCallExpr (
                        IdnUse ("glider"),
                        Vector (
                            DivExpr (
                                MultExpr (
                                    IntExpr (3),
                                    IdnExpr (IdnUse ("height"))),
                                IntExpr (4)),
                            DivExpr (
                                IdnExpr (IdnUse ("width")),
                                IntExpr (4))))),
                FunCallStmt (
                    FunCallExpr (
                        IdnUse ("glider"),
                        Vector (
                            DivExpr (
                                IdnExpr (IdnUse ("height")),
                                IntExpr (4)),
                            DivExpr (
                                MultExpr (
                                    IntExpr (3),
                                    IdnExpr (IdnUse ("width"))),
                                IntExpr (4))))),
                FunCallStmt (
                    FunCallExpr (
                        IdnUse ("glider"),
                        Vector (
                            DivExpr (
                                MultExpr (
                                    IntExpr (3),
                                    IdnExpr (IdnUse ("height"))),
                                IntExpr (4)),
                            DivExpr (
                                MultExpr (
                                    IntExpr (3),
                                    IdnExpr (IdnUse ("width"))),
                                IntExpr (4)))))))))

Environment out:
----------------

scope
    "E" -> Neighbour(NeighbourVal(Vector(1, 0)))
    "N" -> Neighbour(NeighbourVal(Vector(0, 1)))
    "asin" -> BuiltIn(float,Vector(float),false)
    "frnd" -> BuiltIn(float,Vector(float),true)
    "fourGliders" -> Initialiser()
    "SW" -> Neighbour(NeighbourVal(Vector(-1, -1)))
    "log10" -> BuiltIn(float,Vector(float),false)
    "height" -> Constant(int,IntExpr(100))
    "rnd" -> BuiltIn(int,Vector(int),true)
    "cos" -> BuiltIn(float,Vector(float),false)
    "NE" -> Neighbour(NeighbourVal(Vector(1, 1)))
    "NW" -> Neighbour(NeighbourVal(Vector(-1, 1)))
    "exp" -> BuiltIn(float,Vector(float),false)
    "atan" -> BuiltIn(float,Vector(float),false)
    "alive" -> StateField(boolean,Some(FalseExpr()))
    "ceil" -> BuiltIn(int,Vector(float),false)
    "glider" -> Function(unknown,Vector(int, int),FunctionDecl(IdnDef(glider),Vector(ParamDecl(int,IdnDef(row)), ParamDecl(int,IdnDef(col))),None,Vector(CellStmt(CoordExpr(Vector(IdnExpr(IdnUse(row)), IdnExpr(IdnUse(col)))),IterateOverStmt(IdnDef(nbr),Subset(Vector(IdnExpr(IdnUse(N)), IdnExpr(IdnUse(E)), IdnExpr(IdnUse(SW)), IdnExpr(IdnUse(S)), IdnExpr(IdnUse(SE)))),AssignStmt(NeighbourExpr(IdnExpr(IdnUse(nbr)),IdnUse(alive)),TrueExpr()))))))
    "SE" -> Neighbour(NeighbourVal(Vector(1, -1)))
    "black" -> Constant(int,IntExpr(0))
    "floor" -> BuiltIn(int,Vector(float),false)
    "me" -> Neighbour(NeighbourVal(Vector(0, 0)))
    "fabs" -> BuiltIn(float,Vector(float),false)
    "round" -> BuiltIn(int,Vector(float),false)
    "W" -> Neighbour(NeighbourVal(Vector(-1, 0)))
    "tan" -> BuiltIn(float,Vector(float),false)
    "abs" -> BuiltIn(int,Vector(int),false)
    "sin" -> BuiltIn(float,Vector(float),false)
    "width" -> Constant(int,IntExpr(100))
    "white" -> Constant(int,IntExpr(16777215))
    "log" -> BuiltIn(float,Vector(float),false)
    "acos" -> BuiltIn(float,Vector(float),false)
    "S" -> Neighbour(NeighbourVal(Vector(0, -1)))
    "singleGlider" -> Initialiser()
